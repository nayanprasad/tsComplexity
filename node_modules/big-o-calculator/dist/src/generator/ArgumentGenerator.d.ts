import { FunctionArgument, TestSample } from "../structures";
declare abstract class BuiltInArgumentTypes {
    static WORDS: string;
    static ALPHA_STRING: string;
    static NUMBER_STRING: string;
    static NUMBER: string;
    static RANDOM_NUMBERS: string;
    static ORDERED_NUMBERS: string;
}
declare type ArgumentGeneratingFunction = (n: number) => FunctionArgument;
declare class ArgumentGenerator {
    private generators;
    isArgumentTypeSupported(argumentType: string): boolean;
    generateSet(ns: number[], testedFunctionName: string): TestSample[];
    generate(n: number, testedFunctionName: string): TestSample;
    useBuiltInGenerator(testedFunctionName: string, builtInGeneratorName: string): void;
    addCustomGenerator(testedFunctionName: string, func: ArgumentGeneratingFunction): void;
}
export { ArgumentGenerator, BuiltInArgumentTypes, ArgumentGeneratingFunction };
